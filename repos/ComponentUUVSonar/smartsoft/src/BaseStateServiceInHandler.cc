//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------
#include "BaseStateServiceInHandler.hh"
#include "ComponentUUVSonar.hh"

#include <iostream>

BaseStateServiceInHandler::BaseStateServiceInHandler(Smart::InputSubject<CommBasicObjects::CommBaseState> *subject, const int &prescaleFactor)
:	BaseStateServiceInHandlerCore(subject, prescaleFactor)
{
	std::cout << "constructor BaseStateServiceInHandler\n";
}
BaseStateServiceInHandler::~BaseStateServiceInHandler() 
{
	std::cout << "destructor BaseStateServiceInHandler\n";
}

void BaseStateServiceInHandler::on_BaseStateServiceIn(const CommBasicObjects::CommBaseState &input)
{
	// implement business logic here
	// (do not use blocking calls here, otherwise this might block the InputPort BaseStateServiceIn)
	if (COMP->state != NULL)
	{
		COMP->state->OnMsg(input);
	}
}
